// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using veebipood.Data;

#nullable disable

namespace veebipood.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251028072319_ChangedDatabase")]
    partial class ChangedDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("veebipood.Models.Aadress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Linn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Maja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postiindeks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tanav")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Aadressid");
                });

            modelBuilder.Entity("veebipood.Models.Arve", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KlientId")
                        .HasColumnType("int");

                    b.Property<decimal>("Kogusumma")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Kuupaev")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaksestaatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KlientId");

                    b.HasIndex("MaksestaatusId");

                    b.ToTable("Arved");
                });

            modelBuilder.Entity("veebipood.Models.Arverida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ArveId")
                        .HasColumnType("int");

                    b.Property<int>("Kogus")
                        .HasColumnType("int");

                    b.Property<int>("ToodeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArveId");

                    b.HasIndex("ToodeId");

                    b.ToTable("Arveread");
                });

            modelBuilder.Entity("veebipood.Models.Kategooria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nimetus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kategooriad");
                });

            modelBuilder.Entity("veebipood.Models.Klient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AadressId")
                        .HasColumnType("int");

                    b.Property<int>("KontaktandmedId")
                        .HasColumnType("int");

                    b.Property<string>("Nimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AadressId");

                    b.HasIndex("KontaktandmedId");

                    b.ToTable("Kliendid");
                });

            modelBuilder.Entity("veebipood.Models.Kontaktandmed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kontaktandmed");
                });

            modelBuilder.Entity("veebipood.Models.Maksestaatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Maksetahtaeg")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("MaksmiseKuupaev")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Makstud")
                        .HasColumnType("bit");

                    b.Property<decimal>("MakstudSumma")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Maksestaatused");
                });

            modelBuilder.Entity("veebipood.Models.Toode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktiivne")
                        .HasColumnType("bit");

                    b.Property<decimal>("Hind")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("KategooriaId")
                        .HasColumnType("int");

                    b.Property<int>("Laokogus")
                        .HasColumnType("int");

                    b.Property<string>("Nimetus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PildiUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Vananemisaeg")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KategooriaId");

                    b.ToTable("Tooted");
                });

            modelBuilder.Entity("veebipood.Models.Arve", b =>
                {
                    b.HasOne("veebipood.Models.Klient", "Klient")
                        .WithMany()
                        .HasForeignKey("KlientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("veebipood.Models.Maksestaatus", "Maksestaatus")
                        .WithMany()
                        .HasForeignKey("MaksestaatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klient");

                    b.Navigation("Maksestaatus");
                });

            modelBuilder.Entity("veebipood.Models.Arverida", b =>
                {
                    b.HasOne("veebipood.Models.Arve", null)
                        .WithMany("Arveread")
                        .HasForeignKey("ArveId");

                    b.HasOne("veebipood.Models.Toode", "Toode")
                        .WithMany()
                        .HasForeignKey("ToodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Toode");
                });

            modelBuilder.Entity("veebipood.Models.Klient", b =>
                {
                    b.HasOne("veebipood.Models.Aadress", "Aadress")
                        .WithMany()
                        .HasForeignKey("AadressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("veebipood.Models.Kontaktandmed", "Kontaktandmed")
                        .WithMany()
                        .HasForeignKey("KontaktandmedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aadress");

                    b.Navigation("Kontaktandmed");
                });

            modelBuilder.Entity("veebipood.Models.Toode", b =>
                {
                    b.HasOne("veebipood.Models.Kategooria", "Kategooria")
                        .WithMany()
                        .HasForeignKey("KategooriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategooria");
                });

            modelBuilder.Entity("veebipood.Models.Arve", b =>
                {
                    b.Navigation("Arveread");
                });
#pragma warning restore 612, 618
        }
    }
}
